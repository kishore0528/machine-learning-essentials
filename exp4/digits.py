# -*- coding: utf-8 -*-
"""digits.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dgdRnaptF8QdnJpi7RhGLexpAaadIzYM
"""

import matplotlib.pyplot as plt
from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPClassifier
from sklearn.metrics import accuracy_score, classification_report
import numpy as np
from PIL import Image

digits = load_digits()
X = digits.data
y = digits.target

X = X / 16.0
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = MLPClassifier(hidden_layer_sizes=(50, 50), max_iter=1000, random_state=42)
print("Training the model...")
model.fit(X_train, y_train)
print("Model training complete!")

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"\nModel Accuracy on test data: {accuracy * 100:.2f}%\n")
print("\n--- Classification Report ---\n")
print(classification_report(y_test, y_pred))

def predict_image(path):
    img = Image.open(path).convert('L').resize((8, 8))
    img = 255 - np.array(img)
    img = (img / 255.0) * 16.0
    sample = img.flatten().reshape(1, -1)
    pred = model.predict(sample)[0]
    plt.imshow(img, cmap='gray')
    plt.title(f"Prediction: {pred}")
    plt.axis('off')
    plt.show()

predict_image("download.jpg")